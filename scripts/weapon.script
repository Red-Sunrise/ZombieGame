go.property("max_ammo", 30)
go.property("reload_time", 1)
go.property("fire_rate", 0.15) -- время между выстрелами
go.property("damage", 10)

local state = require "scripts.state"

function init(self)
	self.ammo = self.max_ammo
	self.reloading = false
	self.fire_timer = 0
	state.bullet_damage = self.damage
end

function update(self, dt)
	self.fire_timer = self.fire_timer + dt
	if self.fire_timer >= self.fire_rate then
		self.fire_timer = 0
		if self.ammo > 0 and not state.player_is_moving then
			-- стреляем, если есть патроны и не двигаемся
			self.ammo = self.ammo - 1
			--print(self.ammo)
			local bullet_position = go.get_position() + vmath.vector3(20, 18, 0)
			local bullet = factory.create("#bullet_factory", bullet_position,nil,{ bullet_damage = self.damage })
			
			msg.post(bullet, "start_moving", { direction = vmath.vector3(1, 0, 0) })
			msg.post(".", "start_shooting")
		elseif self.ammo == 0 and not self.reloading then
			-- начинаем перезарядку, если патронов нет
			self.reloading = true
			msg.post("/player", "start_reloading")
			timer.delay(self.reload_time, false, function()
				self.ammo = self.max_ammo
				self.reloading = false
				msg.post("/player", "stop_reloading")
			end)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("bullet") then
			go.delete(message.other_id)
		end
	end
end

-- Если нажать движение в момент, когда количество патрон 1, то перезарядка будет происходить во время движения